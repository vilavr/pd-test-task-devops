name: CI and Code Analysis

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 1000

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install dependencies
      run: npm ci

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      run: docker build -t pd-test-task-devops .

    - name: Lint code
      run: docker run --rm pd-test-task-devops npm run lint > lint-results.txt

    - name: Run tests in Docker container
      env:
        API_TOKEN: ${{ secrets.API_TOKEN }}
      run: |
        docker run --rm -e API_TOKEN=$API_TOKEN -v $PWD/test-results:/usr/src/app/test-results pd-test-task-devops bash -c "npm test -- --json --outputFile=/usr/src/app/test-results/test-results.json && chmod -R 755 /usr/src/app/test-results && node jest-to-ctrf.js"
    - name: Debug - List files
      run: ls -al test-results

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: test-results/test-results.json

    - name: Upload CTRF Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: ctrf-results
        path: test-results/ctrf-results.json

    - name: Publish CTRF Test Summary Results
      run: npx github-actions-ctrf summary test-results/ctrf-results.json
      if: always()

    - name: Publish CTRF Detailed Test Summary Results
      run: npx github-actions-ctrf tests test-results/ctrf-results.json
      if: always()

    - name: Publish CTRF Failed Test Summary Results
      run: npx github-actions-ctrf failed test-results/ctrf-results.json
      if: always()

    # NYC Coverage steps
    - name: Install NYC
      run: npm install nyc --save-dev

    - name: Run tests with coverage
      env:
        API_TOKEN: ${{ secrets.API_TOKEN }}
      run: npx nyc npm test

    - name: Generate NYC report
      run: |
        npx nyc report \
          --reporter json-summary \
          --report-dir nyc-coverage-report \
          --exclude-after-remap false

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: nyc-coverage-report/coverage-summary.json

    - name: Coverage summary
      run: npx nyc report --reporter=text-summary

    - name: Report NYC coverage
      uses: sidx1024/report-nyc-coverage-github-action@v1.2.7
      with:
        coverage_file: "nyc-coverage-report/coverage-summary.json"
        github_token: ${{ secrets.GITHUB_TOKEN }}

  code_analysis:
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Check for Dependency Updates
      uses: dependabot/fetch-metadata@v1
    - name: Install Dependency-Check
      run: |
        wget https://github.com/jeremylong/DependencyCheck/releases/download/v6.3.2/dependency-check-6.3.2-release.zip
        unzip dependency-check-6.3.2-release.zip
    - name: Run Dependency-Check
      run: |
        ./dependency-check/bin/dependency-check.sh --project MyProject --out ./dependency-check-report --scan . --format ALL
    - name: Upload Dependency-Check Report
      uses: actions/upload-artifact@v2
      with:
        name: dependency-check-report
        path: dependency-check-report

  security_analysis:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
    - name: Run CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/security"
